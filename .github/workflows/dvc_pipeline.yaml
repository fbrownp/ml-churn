name: Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'Dockerfile'
      - 'template.py'
      - 'setup.py'


jobs: 
  Integration: 
    name: Continous Integration
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"


  RunCode:
    name: Running the code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        id: checkout
        uses: actions/checkout@v2

      - name: Packages
        run: pip install -r requirements.txt

      - name: MLFlow authentication
        run:  python3 os.environ["MLFLOW_TRACKING_URI"]="https://dagshub.com/FBrownp/ml-churn.mlflow"

      - name: MLFlow authentication
        run:  python3 os.environ["MLFLOW_TRACKING_USERNAME"]="FBrownp"

      - name: MLFlow authentication
        run:  python3 os.environ["MLFLOW_TRACKING_PASSWORD"]= ${{secrets.DAGSHUBKEY}}

      - name: Connect to repo
        run:
          dvc remote default origin-s3
      
      - name: User
        run:
          dvc remote modify origin-s3 --local access_key_id ${{secrets.DAGSHUBKEY}}
      
      - name: Password
        run:
          dvc remote modify origin-s3 --local secret_access_key ${{secrets.DAGSHUBKEY}}

      - name: Run DVC
        run: dvc repro

      - name: Commit changes in dvc.lock
        uses: stefanzweifel/git-auto-commit-action@v4 
        with:
          commit_message: Commit changes in dvc.lock
          branch: main
          file-pattern: dvc.lock

      - name: DCV push
        run: dvc push -r origin-s3
        
  # Deploy:
  #   name: deploy to docker images
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@main
  #   - name: build and push to docker
  #     uses: docker/build-push-action@v1
  #     with:
  #       username: ${{secrets.DOCKER_USERNAME}}
  #       password: ${{secrets.DOCKER_PASSWORD}}
  #       repository: ${{github.repository}}
  #       tag_with_ref: true
  #       tag_with_sha: true
  #       tags: ${{github.sha}}
      